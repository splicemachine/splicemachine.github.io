apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "hbase.olap.fullname" . }}
  labels:
    app: {{ template "hbase.name" . }}
    chart: {{ template "hbase.chart" . }}
    release: {{ .Release.Name }}
    component: {{ include "hbase.olap.component" . }}
    frameworkId: {{ include "frameworkId" . }}
    dnsprefix: {{ .Values.global.dnsPrefix }}
spec:
  selector:
    matchLabels:
      app: {{ include "hbase.name" . }}
      release: {{ .Release.Name }}
      component: {{ include "hbase.olap.component" . }}
      dnsprefix: {{ .Values.global.dnsPrefix }}
  serviceName: {{ include "hbase.olap.fullname" . }}
  podManagementPolicy: "OrderedReady"
  updateStrategy:
    type: RollingUpdate
  replicas: {{ .Values.olap.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "hbase.name" . }}
        release: {{ .Release.Name }}
        component: {{ include "hbase.olap.component" . }}
        dnsprefix: {{ .Values.global.dnsPrefix }}
        version: "v1"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
                matchLabels:
                  app:  {{ template "hbase.name" . }}
                  release: {{ .Release.Name | quote }}
                  component: {{ include "hbase.olap.component" . }}
                  dnsprefix: {{ .Values.global.dnsPrefix }}
            topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 0
      {{- if .Values.global.nodeSelector.enabled }}
      nodeSelector:
        components: {{ .Values.global.nodeSelector.meta }}
      {{- end }}
      initContainers:
      - name: wait-for-hregion
        image: {{ template "hbase.image" . }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command:
          - "sh"
          - "-c"
          - "until /usr/bin/curl -kLs -X GET http://{{ template "splice.fullname" . }}-hregion-hl.{{ template "svc-domain" . }}:16030/jmx?qry=com.splicemachine.version:type=DatabaseVersion | grep -q Release; do echo waiting for hregion; sleep 2; done;"
      containers:
      - name: hbase-olap
        image: {{ template "hbase.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: HBASE_COMPONENT
            value: olap
          - name: RELEASE_NAME
            value: {{ .Release.Name }}
          - name: FRAMEWORKID
            value: {{ include "frameworkId" . }}
          - name: SERVICE_NAME
            value: {{ include "hbase.olap.fullname" . }}
          - name: DOMAIN_NAME
            value: {{ include "svc-domain" . }}
          - name: HBASE_DEBUG
            value: "{{ .Values.debug }}"
          - name: OLAP_PORT
            value: "16040"
          - name: OLAP_QUEUE_NAME
            value: "default"
          - name: OLAP_APPID
            value: "olap_default"
          - name: OLAP_SERVER_MODE
            value: "KUBERNETES"
          - name: JAVASCOPE
            value: "{{ .Values.global.jscpEnabled }}"
          - name: ZOOKEEPER_QUORUM
            value: "{{ include "zookeeper-quorum" . }}"
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: TZ
            value: {{ .Values.global.timezoneFlag }}
        command:
        - "/bin/bash"
        - "/usr/lib/hbase/bin/splice/start-hbase-component.sh"
        lifecycle:
          preStop:
            exec:
              command: [
                "/bin/bash",
                "/usr/lib/hbase/bin/hbase",
                "stop",
                "olap",
                "$HOSTNAME"
              ]
        startupProbe:
          exec:
            command:
              - sh
              - -c
              - "/usr/lib/hbase/bin/splice/olap-ready.sh"
{{ toYaml .Values.region.startupProbe | indent 10 }}
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "/usr/lib/hbase/bin/splice/olap-ready.sh"
{{ toYaml .Values.olap.livenessProbe | indent 10 }}
        resources:
{{ toYaml .Values.olap.resources | indent 10 }}
        volumeMounts:
        - name: hbase-config
          mountPath: /tmp/hbase-config
        - name: spark-config
          mountPath: /tmp/spark-config
        - name: hdfs-config
          mountPath: /tmp/hdfs-config
        - name: spark1
          mountPath: /spark/tmp0
        - name: spark2
          mountPath: /spark/tmp1
        - name: logdir
          mountPath: /var/log/hbase
      securityContext:
        runAsUser: 1004
        fsGroup: 1000
      serviceAccount: {{ .Release.Name -}}-olap
      serviceAccountName: {{ .Release.Name -}}-olap
      volumes:
      - name: hbase-config
        configMap:
          name: {{ include "olap.config.name" . }}
      - name: spark-config
        configMap:
          name: {{ include "spark.config.name" . }}
      - name: hdfs-config
        configMap:
          name: {{ template "hadoop.config.name" . }}
      - name: spark1
        emptyDir: {}
      - name: spark2
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: logdir
    spec:
      accessModes:
      {{ toYaml $.Values.olap.persistence.accessMode | indent 8 }}
      resources:
        requests:
          storage: {{ $.Values.olap.persistence.size }}
      storageClassName: {{ $.Values.olap.persistence.storageClassName }}
