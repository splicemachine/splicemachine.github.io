apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "bobby.fullname" . }}
  labels:
    app: {{ template "bobby.name" . }}
    chart: {{ template "splice.subchart" . }}
    release: {{ .Release.Name }}
    frameworkId: {{ include "frameworkId" . }}
    dnsprefix: {{ .Values.global.dnsPrefix }}
spec:
  selector:
    matchLabels:
      app: {{ include "bobby.name" . }}
      release: {{ .Release.Name }}
      dnsprefix: {{ .Values.global.dnsPrefix }}
  serviceName: {{ include "bobby.fullname" . }}
  replicas: {{ .Values.bobby.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "bobby.name" . }}
        release: {{ .Release.Name }}
        dnsprefix: {{ .Values.global.dnsPrefix }}
    spec:
      {{- if eq .Values.global.cloudprovider "aws" }}
      serviceAccountName: sagemaker
      {{- end }}
      {{- if .Values.global.nodeSelector.enabled }}
      nodeSelector:
        components: {{ .Values.global.nodeSelector.meta }}
      {{- end }}
      initContainers:
      - name: check-db-ready
        image: {{ template "base-image" . }}
        command:
          - "sh"
          - "-c"
          - "until /usr/bin/curl -kLs -X GET http://{{ template "hbase.hregion.fullname" . }}-hl:16030/jmx?qry=com.splicemachine.version:type=DatabaseVersion | grep -q Release; do echo waiting for database; sleep 2; done;"
      containers:
      - name: bobby
        image: {{ template "bobby.image" . }}
        imagePullPolicy: {{ .Values.bobby.image.pullPolicy }}
        env:
          - name: DB_USER
            value: {{ .Values.global.mlmanager.user }}
          - name: DB_HOST
            value: {{ template "splice.fullname" . }}-hregion.{{ template "svc-domain" . }}
          - name: DB_PASSWORD
            value: {{ .Values.global.mlmanager.password }}
          - name: FRAMEWORK_NAME
            value: {{ include "frameworkId" . }}
          - name: SAGEMAKER_ROLE
            value: {{ .Values.mlflow.sageMakerRole }}
          - name: MLFLOW_URL
            value: http://{{ include "mlflow.fullname" . }}-0.{{ include "mlflow.fullname" . }}-headless.{{ include "svc-domain" . }}:{{ .Values.mlflow.port.mlflow }}
          - name: AWS_ACCESS_KEY_ID
            value: {{ .Values.global.aws.accessId }}
          - name: AWS_SECRET_ACCESS_KEY
            value: {{ .Values.global.aws.accessKey }}
          - name: MODE
            value: {{ .Values.bobby.image.mode}}
          - name: ENVIRONMENT
            value: {{ .Values.global.cloudprovider }}
          - name: TZ
            value: {{ .Values.global.timezoneFlag }}
        command:
        - "/bin/bash"
        - "/opt/bobby/scripts/entrypoint.sh"
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph-storage
          mountPath: /var/lib/docker
        resources:
{{ toYaml .Values.bobby.resources | indent 10 }}
      volumes:
        - name: docker-graph-storage
          emptyDir: {}
