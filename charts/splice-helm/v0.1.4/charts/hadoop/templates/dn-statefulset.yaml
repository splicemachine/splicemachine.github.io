{{- $root := . }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "hdfs.datanode.fullname" . }}
  annotations:
  labels:
    app: {{ include "hadoop.name" . }}
    chart: {{ include "hadoop.chart" . }}
    release: {{ .Release.Name }}
    component: {{ include "hdfs.datanode.component" . }}
    frameworkId: {{ include "frameworkId" . }}
    dnsprefix: {{ .Values.global.dnsPrefix }}
spec:
  selector:
    matchLabels:
      app: {{ include "hadoop.name" . }}
      release: {{ .Release.Name }}
      component: {{ include "hdfs.datanode.component" . }}
      dnsprefix: {{ .Values.global.dnsPrefix }}
  serviceName: {{ include "hdfs.datanode.fullname" . }}
  podManagementPolicy: "Parallel"
  updateStrategy:
    type: RollingUpdate
  replicas: {{ .Values.dataNode.replicas }}
  template:
    metadata:
      labels:
        app: {{ include "hadoop.name" . }}
        release: {{ .Release.Name }}
        component: {{ include "hdfs.datanode.component" . }}
        dnsprefix: {{ .Values.global.dnsPrefix }}
        version: "v1"
    spec:
      affinity:
        {{- if eq .Values.dataNode.affinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                app:  {{ include "hadoop.name" . }}
                release: {{ .Release.Name | quote }}
                component: {{ include "hdfs.datanode.component" . }}
                dnsprefix: {{ .Values.global.dnsPrefix }}
        {{- else if eq .Values.dataNode.affinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app:  {{ include "hadoop.name" . }}
                    release: {{ .Release.Name | quote }}
                    component: {{ include "hdfs.datanode.component" . }}
                    dnsprefix: {{ .Values.global.dnsPrefix }}
        {{- end }}
      terminationGracePeriodSeconds: 0
      {{- if .Values.global.nodeSelector.enabled }}
      nodeSelector:
        components: {{ .Values.global.nodeSelector.db }}
      {{- end }}
      initContainers:
      - name: wait-nn
        image: {{ template "hdfs-image" . }}
        command:
           - "/bin/bash"
           - "/usr/lib/hadoop/bin/splice/wait-for-nn.sh"
           - "{{ include "hdfs.namenode.fullname" . }}"
           - "{{ include "svc-domain" . }}"
      containers:
      - name: {{ include "hdfs.datanode.component" . }}
        image: {{ template "hdfs-image" . }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy | quote }}
        env:
          - name: HADOOP_COMPONENT
            value: datanode
          - name: RELEASE_NAME
            value: {{ .Release.Name }}
          - name: FRAMEWORKID
            value: {{ include "frameworkId" . }}
          - name: SERVICE_NAME
            value: {{ include "hdfs.datanode.fullname" . }}
          - name: DOMAIN_NAME
            value: {{ include "svc-domain" . }}
          - name: DATANODE_DATA_DIR
            value: "{{ include "hdfs.datanode.datadir" . }}"
          - name: NAMENODE_URL
            value: {{ include "hdfs.namenode.url" . }}
          - name: JAVASCOPE
            value: "{{ .Values.global.jscpEnabled }}"
          - name: ZOOKEEPER_QUORUM
            value: "{{ include "zookeeper-quorum" . }}"
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: HADOOP_OPTS
            value: {{ .Values.dataNode.javaopts | quote }}
          - name: TZ
            value: {{ .Values.global.timezoneFlag }}
        command:
           - "/bin/bash"
           - "/usr/lib/hadoop/bin/splice/start-hadoop-component.sh"
        resources:
{{ toYaml .Values.dataNode.resources | indent 10 }}
        lifecycle:
          postStart:
            exec:
              command:
                - "/bin/sh"
                - "-c"
                - |
                  /usr/lib/hadoop/bin/splice/create-hdfs-dirs.sh
        livenessProbe:
          exec:
            command:
              - "/bin/bash"
              - "/usr/lib/hadoop/bin/splice/dn-liveness.sh"
{{ toYaml .Values.dataNode.livenessProbe | indent 10 }}
        volumeMounts:
        - name: hadoop-config
          mountPath: /tmp/hadoop-config
        {{range $i, $e := until (int .Values.dataNode.persistence.count) }}
        - name: dfs{{$i}}
          mountPath: {{ include "hdfs.datanode.datadir" $ }}-{{$i}}
        {{end}}
      volumes:
      - name: hadoop-config
        configMap:
          name: {{ include "hadoop.config.name" . }}
  volumeClaimTemplates:
  {{range $i, $e := until (int .Values.dataNode.persistence.count) }}
  - metadata:
      name: dfs{{$i}}
    spec:
      accessModes:
{{ toYaml $.Values.dataNode.persistence.accessMode | indent 8 }}
      resources:
        requests:
          storage: {{ $.Values.dataNode.persistence.size }}
      storageClassName: {{ $.Values.dataNode.persistence.storageClassName }}
  {{end}}
